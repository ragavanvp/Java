String Syntax Examples
String is an array of characters, represented as:

//String is an array of characters
char[] arrSample = {'R', 'O', 'S', 'E'};
String strSample_1 = new String (arrSample);
In technical terms, the String is defined as follows in the above example-
= new (argument);
Now we always cannot write our strings as arrays, hence we can define the String in Java as follows:
//Representation of String
String strSample_2 = "ROSE";
In technical terms, the above is represented as:
= ;
The String Class Java extends the Object class as shown below.
String Concatenation: Concatenation is joining of two or more strings.

We have two strings str1 = “Rock” and str2 = “Star”
If we add up these two strings we should be having a result as str3= “RockStar”.

First is using “concat” method of String class and second is using arithmetic “+” operator. Both results in the same output

public class Sample_String{
  public static void main(String[] args){
//String Concatenation
String str1 = "Rock";
String str2 = "Star";
//Method 1 : Using concat
String str3 = str1.concat(str2);
System.out.println(str3);
//Method 2 : Using "+" operator
String str4 = str1 + str2;
System.out.println(str4);
}
}

Important Java string methods :
 
=> String "Length" Method
How will you determine the length of given String? 
I have provided a method called as “length”. Use it against the String you need to find the length.

public class Sample_String{
  public static void main(String[] args){  //Our sample string for this tutorial
  String str_Sample = "RockStar";
  //Length of a String
  System.out.println("Length of String: " + str_Sample.length());}}

=> String "indexOf" Method

If I know the length, how would I find which character is at which position? In short, how will I find the index of a character?
You gave the answer yourself buddy, there is a “indexOf” method that will help you determine the location of a specific character that you specify.

public class Sample_String{
  public static void main(String[] args){//Character at position
String str_Sample = "RockStar";
System.out.println("Character at position 5: " + str_Sample.charAt(5));
//Index of a given character
System.out.println("Index of character 'S': " + str_Sample.indexOf('S'));}}

=>  String "charAt" Method

Similar to the above question, given the index, how do I know the character at that location?

Simple one again!! Use the “charAt” method and provide the index whose character you need to find.
public class Sample_String{
public static void main(String[] args){//Character at position
String str_Sample = "RockStar";
System.out.println("Character at position 5: " + str_Sample.charAt(5));}}

=> String "CompareTo" Method

I want to check if the String that was generated by some method is equal to something that I want to verify with? How do I compare two Strings?
Use the method “compareTo” and specify the String that you would like to compare.
Use “compareToIgnoreCase” in case you don’t want the result to be case sensitive.
The result will have the value 0 if the argument string is equal to this string; a value less than 0 if this string is lexicographically less than the string argument; and a value greater than 0 if this string is lexicographically greater than the string argument.
public class Sample_String{
  public static void main(String[] args){//Compare to a String
String str_Sample = "RockStar";
  System.out.println("Compare To 'ROCKSTAR': " + str_Sample.compareTo("rockstar"));
  //Compare to - Ignore case
  System.out.println("Compare To 'ROCKSTAR' - Case Ignored: " + str_Sample.compareToIgnoreCase("ROCKSTAR"));}}

=> String "Contain" Method

I partially know what the string should have contained, how do I confirm if the String contains a sequence of characters I specify?
Use the method “contains” and specify the characters you need to check.
Returns true if and only if this string contains the specified sequence of char values.
public class Sample_String{
  public static void main(String[] args){  //Check if String contains a sequence
String str_Sample = "RockStar";
  System.out.println("Contains sequence 'tar': " + str_Sample.contains("tar"));}}
=> String "endsWith" Method

How do I confirm if a String ends with a particular suffix? Again you answered it. Use the “endsWith” method and specify the suffix in the arguments.
Returns true if the character sequence represented by the argument is a suffix of the character sequence represented by this object.

public class Sample_String{
  public static void main(String[] args){  //Check if ends with a particular sequence
String str_Sample = "RockStar";
  System.out.println("EndsWith character 'r': " + str_Sample.endsWith("r"));}}

=> String "replaceAll" & "replaceFirst" Method

I want to modify my String at several places and replace several parts of the String?
Java String Replace, replaceAll and replaceFirst methods. You can specify the part of the String you want to replace and the replacement String in the arguments.
public class Sample_String{
  public static void main(String[] args){//Replace Rock with the word Duke
String str_Sample = "RockStar";
System.out.println("Replace 'Rock' with 'Duke': " + str_Sample.replace("Rock", "Duke"));}}

=> String Java "tolowercase" & Java "touppercase"

I want my entire String to be shown in lower case or Upper case?
Just use the “toLowercase()” or “ToUpperCase()” methods against the Strings that need to be converted.

public class Sample_String{
  public static void main(String[] args){//Convert to LowerCase
String str_Sample = "RockStar";
System.out.println("Convert to LowerCase: " + str_Sample.toLowerCase());
//Convert to UpperCase
System.out.println("Convert to UpperCase: " + str_Sample.toUpperCase());}}



